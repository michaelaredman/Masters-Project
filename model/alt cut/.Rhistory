predict_regions <- predict_sorted$ix
predict_regions
View(simulated)
W = read.csv("../../data/csv/adjacency.csv")
W$X = NULL
W_n = floor(sum(W)/2)
write.csv(simulated, 'simulated_spatial_corr.csv')
setwd("~/4th Year/project/data/csv")
write.csv(simulated, 'simulated_spatial_corr.csv')
observed = read.csv("../../data/csv/simulated_spatial_corr.csv")
observed$X = NULL
expected = read.csv("../../data/csv/expected.csv")
expected$X = NULL
log_expected = c(log(expected))
numRegions = dim(observed)[1]
numRegions = nrow(observed)
nt = dim(observed)[2]
alpha = 0.9
model_data <- list(numRegions = numRegions,
nt = nt,
observed = as.matrix(observed),
log_expected = log_expected$x,
W_n = W_n,
W = as.matrix(W),
alpha = alpha)
library(rstan)
model <- stan_model(file = "var.stan")
setwd("~/4th Year/project/model/var model")
model <- stan_model(file = "var.stan")
model_nuts <- sampling(model, data = model_data, chains = 1, iter = 500)
model_data <- extract(model_nuts)
result_unsorted2 <- colMeans(model_data$indicator)
result2 <- sort(result_unsorted2, index.return=TRUE)
realt2
result2
unusual
plot(model_data$indicator)
model_data$indicator
View(observed)
result2
unusual
model_nuts <- sampling(model, data = model_data, chains = 1, iter = 2000)
model_data <- list(numRegions = numRegions,
nt = nt,
observed = as.matrix(observed),
log_expected = log_expected$x,
W_n = W_n,
W = as.matrix(W),
alpha = alpha)
model_nuts <- sampling(model, data = model_data, chains = 1, iter = 2000)
model_data <- extract(model_nuts)
result_unsorted2 <- colMeans(model_data$indicator)
result2 <- sort(result_unsorted2, index.return=TRUE)
result2
unusual
observed = read.csv("../../data/csv/simulated.csv")
observed$X = NULL
model_data <- list(numRegions = numRegions,
nt = nt,
observed = as.matrix(observed),
log_expected = log_expected$x,
W_n = W_n,
W = as.matrix(W),
alpha = alpha)
model_nuts <- sampling(model, data = model_data, chains = 1, iter = 2000)
model_data <- extract(model_nuts)
result_unsorted2 <- colMeans(model_data$indicator)
result2 <- sort(result_unsorted2, index.return=TRUE)
result2
rwalk
logit
library(boot)
logit(5)
in.logit(5)
inv.logit(5)
inv.logit(10)
CAR
inv.logit(CAR)
covs <- matrix(data=0, ncol=2, nrow=2)
covs[1,1] <- 1
covs[2,2] <- 1
covs[1,2] <- 0.5
covs[2,1] <- 0.5
covs
points <- mvrnorm(n=100, mu=c(0,0), Sigma=covs)
plot(points)
points <- mvrnorm(n=250, mu=c(0,0), Sigma=covs)
plot(points)
logit.points <- inv.logit(points)
plot(logit.points)
plot(rwalk)
plot(rwalk, type='l')
set.seed(42)
rnorm(1)
rnorm(1)
set.seed(42)
rnorm(1)
rnorm(1)
set.seed(42)
rwalk <- random_walk(len=15, sigma=0.1)
rwalk <- rwalk - mean(rwalk)
plot(rwalk)
set.seed(4)
rwalk <- random_walk(len=15, sigma=0.1)
rwalk <- rwalk - mean(rwalk)
plot(rwalk)
set.seed(314)
rwalk <- random_walk(len=15, sigma=0.1)
rwalk <- rwalk - mean(rwalk)
plot(rwalk)
plot(rwalk, type='l')
CAR <- mvrnorm(mu=rep(0, length(num.neib)), Sigma=cov.matrix*spatial.sd)
class <- classIntervals(CAR, 9, style="quantile")
display.brewer.pal(name = "YlOrRd", n=9)
plotclr <- brewer.pal(9,"YlOrRd")
colcode <- findColours(class, plotclr)
plot(shape, col=colcode)
numRegions <- length(shape@data$SP_ID)
cols <- rep('blue', numRegions)
cols[unusual] <- rep('red', length(unusual))
plot(shape, col=cols)
rwalk_unusual
rwalk
plot(rwalk)
ggplot(rwalk)
rwalk_unusual <- rwalk
rwalk_unusual[10] <- rwalk_unusual[10] + 0.4
rwalk_unusual[12] <- rwalk_unusual[12] + 0.3
rwalk_unusual[15] <- rwalk_unusual[15] + 0.5
plot(rwalk, type='l')
plot(rwalk_unusual, type='l')
rwalk_unusual <- rwalk
rwalk_unusual[10] <- rwalk_unusual[10] + 0.4
rwalk_unusual[11] <- rwalk_unusual[11] + 0.3
rwalk_unusual[15] <- rwalk_unusual[15] + 0.5
plot(rwalk_unusual, type='l')
plot(rwalk, type='l')
par(TRUE)
line(rwalk_unusual)
lines(rwalk_unusual)
rwalk_unusual <- rwalk
rwalk_unusual[10] <- rwalk_unusual[10] + 0.4
rwalk_unusual[11] <- rwalk_unusual[11] + 0.3
rwalk_unusual[13] <- rwalk_unusual[13] + 0.3
plot(rwalk, type='l', col='red')
plot(rwalk, type='l', col='blue')
lines(rwalk_unusual, type='l', col='red')
plot(rwalk_unusual, type='l', col='blue')
lines(rwalk, type='l', col='red')
rwalk_unusual <- rwalk
rwalk_unusual[10:15] <- rwalk_unusual[10:15] + abs(rnorm(n=5))
rnorm(n=5)
rwalk_unusual <- rwalk
rwalk_unusual[10:15] <- rwalk_unusual[10:15] + abs(rnorm(n=6))
set.seed(314)
rwalk <- random_walk(len=15, sigma=0.1)
rwalk <- rwalk - mean(rwalk)
rwalk_unusual <- rwalk
rwalk_unusual[10:15] <- rwalk_unusual[10:15] + abs(rnorm(n=6))
plot(rwalk_unusual, type='l', col='red')
rwalk_unusual <- rwalk
set.seed(314)
rwalk <- random_walk(len=15, sigma=0.1)
rwalk <- rwalk - mean(rwalk)
rwalk_unusual <- rwalk
rwalk_unusual[10:15] <- rwalk_unusual[10:15] + abs(rnorm(n=6, sd = 0.1))
plot(rwalk_unusual, type='l', col='red')
lines(rwalk, type='l', col='blue')
set.seed(314)
rwalk <- random_walk(len=15, sigma=0.1)
rwalk <- rwalk - mean(rwalk)
rwalk_unusual <- rwalk
rwalk_unusual[10:15] <- rwalk_unusual[10:15] + abs(rnorm(n=6, sd = 0.3))
plot(rwalk_unusual, type='l', col='red')
lines(rwalk, type='l', col='blue')
set.seed(314)
rwalk <- random_walk(len=15, sigma=0.1)
rwalk <- rwalk - mean(rwalk)
rwalk_unusual <- rwalk
rwalk_unusual[10:15] <- rwalk_unusual[10:15] + abs(rnorm(n=6, sd = 0.25))
plot(rwalk_unusual, type='l', col='red')
lines(rwalk, type='l', col='blue')
CAR <- mvrnorm(mu=rep(0, length(num.neib)), Sigma=cov.matrix*spatial.sd)
class <- classIntervals(CAR, 9, style="quantile")
display.brewer.pal(name = "YlOrRd", n=9)
plotclr <- brewer.pal(9,"YlOrRd")
colcode <- findColours(class, plotclr)
plot(shape, col=colcode)
set.seed(314)
rwalk <- random_walk(len=15, sigma=0.1)
rwalk <- rwalk - mean(rwalk)
rwalk_unusual <- rwalk
rwalk_unusual[10:15] <- rwalk_unusual[10:15] + abs(rnorm(n=6, sd = 0.2))
plot(rwalk_unusual, type='l', col='red')
lines(rwalk, type='l', col='blue')
set.seed(314)
rwalk <- random_walk(len=15, sigma=0.1)
rwalk <- rwalk - mean(rwalk)
rwalk_unusual <- rwalk
rwalk_unusual[10:15] <- rwalk_unusual[10:15] + abs(rnorm(n=6, sd = 0.3))
plot(rwalk_unusual, type='l', col='red')
lines(rwalk, type='l', col='blue')
CAR <- mvrnorm(mu=rep(0, length(num.neib)), Sigma=cov.matrix*spatial.sd)
mu <- matrix(data=0, nrow=210, ncol=15)
mu <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu[i, ] <- rwalk
}
for(i in unusual) {
mu[i, ] <- rwalk_unusual
}
for(i in 1:15) {
mu[, i] <- mu[, i] + CAR + log(expected)
}
length(mu[, 1])
mu <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu[i, ] <- rwalk
}
for(i in unusual) {
mu[i, ] <- rwalk_unusual
}
for(i in 1:15) {
mu[, i] <- mu[, i] + CAR + log(expected)
}
mu <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu[i, ] <- mu[i, ] + rwalk
}
for(i in unusual) {
mu[i, ] <- rwalk_unusual
}
for(i in 1:15) {
mu[, i] <- mu[, i] + CAR + log(expected)
}
mu
mu <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu[i, ] <- mu[i, ] + rwalk
}
for(i in unusual) {
mu[i, ] <- rwalk_unusual
}
View(mu)
unusual
mu <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu[i, ] <- mu[i, ] + rwalk
}
View(mu)
mu[1, ]
mu[2, ] <- rwalk_unusual
View(mu)
mu[i, ] <- mu[i, ] + rwalk
mu <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu[i, ] <- mu[i, ] + rwalk
}
for(i in unusual) {
mu[i, ] <- rwalk_unusual
}
View(mu)
mu[, 1]
CAR
expected
asthma <- asthma_expected_i[asthma_expected_i$CCG != '10L',]
expected = as.vector(asthma['E']$E)
expected
for(i in 1:15) {
mu[, i] <- mu[, i] + CAR + log(expected)
}
rate.matrix <- exp(mu)
mu <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu[i, ] <- mu[i, ] + rwalk
}
for(i in unusual) {
mu[i, ] <- rwalk_unusual
}
for(i in 1:15) {
mu[, i] <- mu[, i] + CAR + log(expected)
}
rate.matrix <- exp(mu)
View(rate.matrix)
set.seed(314)
rwalk <- random_walk(len=15, sigma=0.1)
rwalk <- rwalk - mean(rwalk)
rwalk_unusual <- rwalk
rwalk_unusual[10:15] <- rwalk_unusual[10:15] + abs(rnorm(n=6, sd = 0.3))
CAR <- mvrnorm(mu=rep(0, length(num.neib)), Sigma=cov.matrix*spatial.sd)
mu <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu[i, ] <- mu[i, ] + rwalk
}
for(i in unusual) {
mu[i, ] <- rwalk_unusual
}
for(i in 1:15) {
mu[, i] <- mu[, i] + CAR + log(expected)
}
rate.matrix <- exp(mu)
pois <- function(lambda) {rpois(n=1, lambda)}
simulated <- apply(rate.matrix, MARGIN=c(1, 2), FUN=pois)
View(simulated)
write.csv(simulated, 'simulated_spatial_corr.csv')
for(i in 1:15) {
class2 <- classIntervals(simulated[,i], 9, style="quantile")
plotclr2 <- brewer.pal(9,"YlOrRd")
colcode2 <- findColours(class2, plotclr2)
plot(shape, col=colcode2)
}
setwd("~/4th Year/project/model/var model")
setwd("~/4th Year/project/model/var model")
W = read.csv("../../data/csv/adjacency.csv")
W$X = NULL
W_n = floor(sum(W)/2)
observed = read.csv("../../data/csv/simulated_spatial_corr.csv")
observed$X = NULL
expected = read.csv("../../data/csv/expected.csv")
expected$X = NULL
log_expected = c(log(expected))
numRegions = dim(observed)[1]
numRegions = nrow(observed)
nt = dim(observed)[2]
alpha = 0.9
model_data <- list(numRegions = numRegions,
nt = nt,
observed = as.matrix(observed),
log_expected = log_expected$x,
W_n = W_n,
W = as.matrix(W),
alpha = alpha)
model <- stan_model(file = "var.stan")
model_nuts <- sampling(model, data = model_data, chains = 1, iter = 2000)
model_data <- extract(model_nuts)
result_unsorted2 <- colMeans(model_data$indicator)
result2 <- sort(result_unsorted2, index.return=TRUE)
results2
result2
unusual
length(unusual)
View(simulated)
write.csv(simulated, 'simulated_spatial_corr.csv')
write.csv(simulated, '~/4th Year/project/data/csv/simulated_spatial_corr.csv')
observed = read.csv("../../data/csv/simulated_spatial_corr.csv")
observed$X = NULL
model_data <- list(numRegions = numRegions,
nt = nt,
observed = as.matrix(observed),
log_expected = log_expected$x,
W_n = W_n,
W = as.matrix(W),
alpha = alpha)
model_nuts <- sampling(model, data = model_data, chains = 1, iter = 2000)
model_data <- extract(model_nuts)
result_unsorted2 <- colMeans(model_data$indicator)
result2 <- sort(result_unsorted2, index.return=TRUE)
result2
unusual
lmbda <- model_data$lmbda
lmbda_av <- colMeans(lmbda)
lmbda_av
exp(0.23)
unusual
setwd("~/4th Year/project/model/alt cut/")
general <- read.csv('general.csv')
specific <- read.csv('specific.csv')
observed <- read.csv('../../data/csv/simulated_spatial_corr.csv')
observed$X = NULL
specific$X = NULL
general$X = NULL
numRegions = dim(observed)[1]
nt = dim(observed)[2]
prop_unusual = 15/210
cut_model <- jags.model('cut.jags',
data = list('N' = numRegions,
'prop_unusual' = prop_unusual,
'T' = nt,
'general' = general,
'specific' = specific,
'y' = observed),
n.chains = 4,
n.adapt = 10000)
predict_mcarray <- coda.samples(cut_model,
c('z'),
n.iter = 10000)
predict <- as.matrix(predict_mcarray)
predict_av <- colMeans(predict)
predict_sorted <- sort(predict_av, index.return=TRUE)
predict_values <- predict_sorted$x
predict_regions <- predict_sorted$ix
predict_regions
unusual
predict_values
cases = asthma_expected_i['E']
cases_data <- as.data.frame(cases)
class <- classIntervals(cases_data$E, 8, style="quantile")
plotclr <- brewer.pal(8,"YlOrRd")
colcode <- findColours(class, plotclr)
plot(shape, col=colcode)
set.seed(6)
rwalk_A <- random_walk(len=15, sigma=0.1)
rwalk_A <- rwalk_A - mean(rwalk)
rwalk_B <- random_walk(len=15, sigma=0.1)
rwalk_B <- rwalk_B - mean(rwalk)
plot(rwalk_A)
plot(rwalk_A, type='l')
plot(rwalk_B, type='l')
set.seed(42)
rwalk_A <- random_walk(len=15, sigma=0.1)
rwalk_A <- rwalk_A - mean(rwalk)
rwalk_B <- random_walk(len=15, sigma=0.1)
rwalk_B <- rwalk_B - mean(rwalk)
plot(rwalk_A, type='l')
plot(rwalk_B, type='l')
set.seed(21)
rwalk_A <- random_walk(len=15, sigma=0.1)
rwalk_A <- rwalk_A - mean(rwalk)
rwalk_B <- random_walk(len=15, sigma=0.1)
rwalk_B <- rwalk_B - mean(rwalk)
plot(rwalk_A)
plot(rwalk_A, type='l')
plot(rwalk_B, type='l')
rwalk_A_unusual <- rwalk_A
rwalk_A_unusual[c(8, 10, 12)] <- rwalk_A_unusual[c(8, 10, 12)] + abs(rnorm(n=3, sd = 0.1))
rwalk_B_unusual <- rwalk_B
rwalk_B_unusual[12:15] <- rwalk_B_unusual[12:15] + abs(rnorm(n=4, sd = 0.1))
plot(rwalk_A_unusual)
plot(rwalk_A_unusual, type='l')
plot(rwalk_A, type='l')
lines(rwalk_A_unusual, type='l')
plot(rwalk_B, type='l')
lines(rwalk_B_unusual, type='l')
neib <- poly2nb(shape)
adj <- nb2mat(neib, style="B")
num.neib <- colSums(adj)
alpha <- 0.9
prec.matrix <- diag(num.neib) - alpha*adj
cov.matrix <- solve(prec.matrix)
spatial.sd <- 0.02
CAR.A <- mvrnorm(mu=rep(0, length(num.neib)), Sigma=cov.matrix*spatial.sd.A)
CAR.B <- mvrnorm(mu=rep(0, length(num.neib)), Sigma=cov.matrix*spatial.sd.B)
spatial.sd.A <- 0.02
spatial.sd.B <- 0.03
CAR.A <- mvrnorm(mu=rep(0, length(num.neib)), Sigma=cov.matrix*spatial.sd.A)
CAR.B <- mvrnorm(mu=rep(0, length(num.neib)), Sigma=cov.matrix*spatial.sd.B)
class <- classIntervals(CAR.A, 9, style="quantile")
display.brewer.pal(name = "YlOrRd", n=9)
plotclr <- brewer.pal(9,"YlOrRd")
colcode <- findColours(class, plotclr)
plot(shape, col=colcode)
class <- classIntervals(CAR.B, 9, style="quantile")
plotclr <- brewer.pal(9,"YlOrRd")
colcode <- findColours(class, plotclr)
plot(shape, col=colcode)
set.seed(21)
rwalk.A <- random_walk(len=15, sigma=0.1)
rwalk.A <- rwalk.A - mean(rwalk.A)
rwalk.B <- random_walk(len=15, sigma=0.1)
rwalk.B <- rwalk.B - mean(rwalk.B)
rwalk.A.unusual <- rwalk.A
rwalk.A.unusual[c(8, 10, 12)] <- rwalk.A.unusual[c(8, 10, 12)] + abs(rnorm(n=3, sd = 0.1))
rwalk.B.unusual <- rwalk.B
rwalk.B.unusual[12:15] <- rwalk.B.unusual[12:15] + abs(rnorm(n=4, sd = 0.1))
plot(rwalk.A, type='l')
lines(rwalk.A.unusual, type='l')
plot(rwalk.B, type='l')
lines(rwalk.B.unusual, type='l')
CAR.A <- mvrnorm(mu=rep(0, length(num.neib)), Sigma=cov.matrix*spatial.sd.A)
CAR.B <- mvrnorm(mu=rep(0, length(num.neib)), Sigma=cov.matrix*spatial.sd.B)
mu.A <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu.A[i, ] <- mu.A[i, ] + rwalk.A
}
for(i in unusual) {
mu.A[i, ] <- rwalk.A.unusual
}
for(i in 1:15) {
mu.A[, i] <- mu.A[, i] + CAR.A + log(expected)
}
expected = as.vector(asthma['E']$E)
asthma <- asthma_expected_i[asthma_expected_i$CCG != '10L',]
expected = as.vector(asthma['E']$E)
mu.A <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu.A[i, ] <- mu.A[i, ] + rwalk.A
}
for(i in unusual) {
mu.A[i, ] <- rwalk.A.unusual
}
for(i in 1:15) {
mu.A[, i] <- mu.A[, i] + CAR.A + log(expected)
}
rate.matrix.A <- exp(mu.A)
mu.B <- matrix(data=0, nrow=210, ncol=15)
for(i in 1:210) {
mu.B[i, ] <- mu.B[i, ] + rwalk.B
}
for(i in unusual) {
mu.B[i, ] <- rwalk.B.unusual
}
for(i in 1:15) {
mu.B[, i] <- mu.B[, i] + CAR.B + log(expected)
}
rate.matrix.B <- exp(mu.B)
pois <- function(lambda) {rpois(n=1, lambda)}
simulated.A <- apply(rate.matrix.A, MARGIN=c(1, 2), FUN=pois)
simulated.B <- apply(rate.matrix.B, MARGIN=c(1, 2), FUN=pois)
write.csv(simulated.A, '~/4th Year/project/data/csv/simulated_A.csv')
write.csv(simulated.B, '~/4th Year/project/data/csv/simulated_B.csv')
View(simulated.A)
View(simulated.B)
